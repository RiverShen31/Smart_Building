// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Smart_Building1.Data;

#nullable disable

namespace Smart_Building1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240307083648_firstInitial")]
    partial class firstInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Smart_Building1.Model.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BuildingId")
                        .HasColumnType("integer");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("Smart_Building1.Model.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("Smart_Building1.Model.Citizen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Citizens");
                });

            modelBuilder.Entity("Smart_Building1.Model.CitizenApartment", b =>
                {
                    b.Property<int>("CitizenId")
                        .HasColumnType("integer");

                    b.Property<int>("ApartmentId")
                        .HasColumnType("integer");

                    b.HasKey("CitizenId", "ApartmentId");

                    b.HasIndex("ApartmentId");

                    b.ToTable("CitizenApartments");
                });

            modelBuilder.Entity("Smart_Building1.Model.Apartment", b =>
                {
                    b.HasOne("Smart_Building1.Model.Building", "Building")
                        .WithMany("Apartments")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("Smart_Building1.Model.CitizenApartment", b =>
                {
                    b.HasOne("Smart_Building1.Model.Apartment", "Apartment")
                        .WithMany("CitizenApartments")
                        .HasForeignKey("ApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smart_Building1.Model.Citizen", "Citizen")
                        .WithMany("CitizenApartments")
                        .HasForeignKey("CitizenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartment");

                    b.Navigation("Citizen");
                });

            modelBuilder.Entity("Smart_Building1.Model.Apartment", b =>
                {
                    b.Navigation("CitizenApartments");
                });

            modelBuilder.Entity("Smart_Building1.Model.Building", b =>
                {
                    b.Navigation("Apartments");
                });

            modelBuilder.Entity("Smart_Building1.Model.Citizen", b =>
                {
                    b.Navigation("CitizenApartments");
                });
#pragma warning restore 612, 618
        }
    }
}
